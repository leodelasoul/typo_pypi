{
   "rows": {}
}{
   "rows": {}
}{
   "rows": {
      "six": [
         {
            "author": "Seth Michael Larson",
            "author_email": "sethmichaellarson@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "",
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
               "last_day": -1,
               "last_month": -1,
               "last_week": -1
            },
            "home_page": "https://github.com/sethmlarson/asix",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "asix",
            "package_url": "https://pypi.org/project/asix/",
            "platform": "",
            "project_url": "https://pypi.org/project/asix/",
            "project_urls": {
               "Homepage": "https://github.com/sethmlarson/asix"
            },
            "release_url": "https://pypi.org/project/asix/0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Six for async, works well with unasync",
            "version": "0",
            "yanked": false,
            "yanked_reason": null
         },
         {
            "author": "chrysn",
            "author_email": "chrysn@fsfe.org",
            "bugtrack_url": null,
            "classifiers": [
               "Development Status :: 3 - Alpha",
               "Intended Audience :: Education",
               "Intended Audience :: Science/Research",
               "License :: OSI Approved :: GNU General Public License (GPL)"
            ],
            "description": "UNKNOWN",
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
               "last_day": -1,
               "last_month": -1,
               "last_week": -1
            },
            "home_page": "UNKNOWN",
            "keywords": null,
            "license": "GPL",
            "maintainer": null,
            "maintainer_email": null,
            "name": "si",
            "package_url": "https://pypi.org/project/si/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/si/",
            "project_urls": {
               "Download": "UNKNOWN",
               "Homepage": "UNKNOWN"
            },
            "release_url": "https://pypi.org/project/si/0.1.1-1/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Module to represent SI units",
            "version": "0.1.1-1",
            "yanked": false,
            "yanked_reason": null
         },
         {
            "author": "Benjamin Peterson",
            "author_email": "benjamin@python.org",
            "bugtrack_url": null,
            "classifiers": [
               "Development Status :: 5 - Production/Stable",
               "Intended Audience :: Developers",
               "License :: OSI Approved :: MIT License",
               "Programming Language :: Python :: 2",
               "Programming Language :: Python :: 3",
               "Topic :: Software Development :: Libraries",
               "Topic :: Utilities"
            ],
            "description": ".. image:: https://img.shields.io/pypi/v/six.svg\n   :target: https://pypi.org/project/six/\n   :alt: six on PyPI\n\n.. image:: https://travis-ci.org/benjaminp/six.svg?branch=master\n   :target: https://travis-ci.org/benjaminp/six\n   :alt: six on TravisCI\n\n.. image:: https://readthedocs.org/projects/six/badge/?version=latest\n   :target: https://six.readthedocs.io/\n   :alt: six's documentation on Read the Docs\n\n.. image:: https://img.shields.io/badge/license-MIT-green.svg\n   :target: https://github.com/benjaminp/six/blob/master/LICENSE\n   :alt: MIT License badge\n\nSix is a Python 2 and 3 compatibility library.  It provides utility functions\nfor smoothing over the differences between the Python versions with the goal of\nwriting Python code that is compatible on both Python versions.  See the\ndocumentation for more information on what is provided.\n\nSix supports Python 2.7 and 3.3+.  It is contained in only one Python\nfile, so it can be easily copied into your project. (The copyright and license\nnotice must be retained.)\n\nOnline documentation is at https://six.readthedocs.io/.\n\nBugs can be reported to https://github.com/benjaminp/six.  The code can also\nbe found there.\n\n\n",
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
               "last_day": -1,
               "last_month": -1,
               "last_week": -1
            },
            "home_page": "https://github.com/benjaminp/six",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "six",
            "package_url": "https://pypi.org/project/six/",
            "platform": "",
            "project_url": "https://pypi.org/project/six/",
            "project_urls": {
               "Homepage": "https://github.com/benjaminp/six"
            },
            "release_url": "https://pypi.org/project/six/1.15.0/",
            "requires_dist": null,
            "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*",
            "summary": "Python 2 and 3 compatibility utilities",
            "version": "1.15.0",
            "yanked": false,
            "yanked_reason": null
         },
         {
            "author": "Gabriel Alves",
            "author_email": "gabriel.alves@pickcells.bio",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# sx\n#### Framework to manage gRPC-based microservices application",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/itsmealves/sx/releases/download/0.6.0/sx-0.6.0.tar.gz",
            "downloads": {
               "last_day": -1,
               "last_month": -1,
               "last_week": -1
            },
            "home_page": "https://github.com/itsmealves/sx",
            "keywords": "sx microservices rpc grpc Framework",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "sx",
            "package_url": "https://pypi.org/project/sx/",
            "platform": "",
            "project_url": "https://pypi.org/project/sx/",
            "project_urls": {
               "Download": "https://github.com/itsmealves/sx/releases/download/0.6.0/sx-0.6.0.tar.gz",
               "Homepage": "https://github.com/itsmealves/sx"
            },
            "release_url": "https://pypi.org/project/sx/0.6.0/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "Framework to manage gRPC-based microservices application",
            "version": "0.6.0",
            "yanked": false,
            "yanked_reason": null
         }
      ],
      "rsa": [
         {
            "author": "Michael Foord",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "",
            "description_content_type": null,
            "docs_url": null,
            "download_url": "",
            "downloads": {
               "last_day": -1,
               "last_month": -1,
               "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "rs",
            "package_url": "https://pypi.org/project/rs/",
            "platform": "",
            "project_url": "https://pypi.org/project/rs/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/rs/0.0/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "",
            "version": "0.0",
            "yanked": false,
            "yanked_reason": null
         },
         {
            "author": "Ramses",
            "author_email": "hello@ramses.tech",
            "bugtrack_url": null,
            "classifiers": [
               "Framework :: Pyramid",
               "Programming Language :: Python",
               "Programming Language :: Python :: 2",
               "Programming Language :: Python :: 2.7",
               "Programming Language :: Python :: 3",
               "Programming Language :: Python :: 3.4",
               "Programming Language :: Python :: 3.5",
               "Topic :: Internet :: WWW/HTTP",
               "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"
            ],
            "description": "# `Ra`\n[![Build Status](https://travis-ci.org/ramses-tech/ra.svg?branch=master)](https://travis-ci.org/ramses-tech/ra)\n[![Documentation](https://readthedocs.org/projects/ra/badge/?version=stable)](http://ra.readthedocs.org)\n\nRa is a test suite generator and helper library for testing APIs described\nin [RAML](http://raml.org/).\n\nOut of the box, Ra provides a basic, automated test suite to test the routes\ndeclared in the RAML document. It provides test helpers for augmenting these\nwith custom tests to test application-specific logic, side effects, etc.\n\nRa is primarily designed to provide testing support for\n[ramses](http://github.com/ramses-tech/ramses) and\n[nefertari](http://github.com/ramses-tech/nefertari) applications, but can\nbe used with any WSGI-conformant, RAML-described API.\n\nIt currently depends on pytest but may be adapted for other test frameworks\nin the future. It works best using WebTest but doesn't require it.\n\n## Name\n\nRa was the god of the sun, the most important god in ancient Egypt.\n\n\n## Try it (dev)\n\nRun the test suite:\n\n```bash\n    $ pip install -r requirements.txt\n    $ py.test\n```\n\nCheck out the example:\n\n```bash\n    $ cd examples/ramses-test\n    $ pip install -r requirements.txt\n    $ py.test\n```\n\nThe example RAML at `examples/ramses-test/api.raml` and the test file\n`examples/ramses-test/tests/test_api.py` should be helpful to reference.\n\nSee the docs in `docs/`, and the `api.raml` and `tests/test_api.py` in\n`tests/apps/ramses_test`",
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
               "last_day": -1,
               "last_month": -1,
               "last_week": -1
            },
            "home_page": "https://github.com/ramses-tech/ra",
            "keywords": "web raml",
            "license": "UNKNOWN",
            "maintainer": null,
            "maintainer_email": null,
            "name": "ra",
            "package_url": "https://pypi.org/project/ra/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/ra/",
            "project_urls": {
               "Download": "UNKNOWN",
               "Homepage": "https://github.com/ramses-tech/ra"
            },
            "release_url": "https://pypi.org/project/ra/0.2.0/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Test RAML API definition",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
         },
         {
            "author": "Sybren A. Stuvel",
            "author_email": "sybren@stuvel.eu",
            "bugtrack_url": null,
            "classifiers": [
               "Development Status :: 5 - Production/Stable",
               "Intended Audience :: Developers",
               "Intended Audience :: Education",
               "Intended Audience :: Information Technology",
               "License :: OSI Approved :: Apache Software License",
               "Operating System :: OS Independent",
               "Programming Language :: Python",
               "Programming Language :: Python :: 3",
               "Programming Language :: Python :: 3.5",
               "Programming Language :: Python :: 3.6",
               "Programming Language :: Python :: 3.7",
               "Programming Language :: Python :: 3.8",
               "Programming Language :: Python :: Implementation :: CPython",
               "Programming Language :: Python :: Implementation :: PyPy",
               "Topic :: Security :: Cryptography"
            ],
            "description": "Pure Python RSA implementation\n==============================\n\n[![PyPI](https://img.shields.io/pypi/v/rsa.svg)](https://pypi.org/project/rsa/)\n[![Build Status](https://travis-ci.org/sybrenstuvel/python-rsa.svg?branch=master)](https://travis-ci.org/sybrenstuvel/python-rsa)\n[![Coverage Status](https://coveralls.io/repos/github/sybrenstuvel/python-rsa/badge.svg?branch=master)](https://coveralls.io/github/sybrenstuvel/python-rsa?branch=master)\n[![Code Climate](https://api.codeclimate.com/v1/badges/a99a88d28ad37a79dbf6/maintainability)](https://codeclimate.com/github/codeclimate/codeclimate/maintainability)\n\n[Python-RSA](https://stuvel.eu/rsa) is a pure-Python RSA implementation. It supports\nencryption and decryption, signing and verifying signatures, and key\ngeneration according to PKCS#1 version 1.5. It can be used as a Python\nlibrary as well as on the commandline. The code was mostly written by\nSybren A.  Stüvel.\n\nDocumentation can be found at the [Python-RSA homepage](https://stuvel.eu/rsa). For all changes, check [the changelog](https://github.com/sybrenstuvel/python-rsa/blob/master/CHANGELOG.md).\n\nDownload and install using:\n\n    pip install rsa\n\nor download it from the [Python Package Index](https://pypi.org/project/rsa/).\n\nThe source code is maintained at [GitHub](https://github.com/sybrenstuvel/python-rsa/) and is\nlicensed under the [Apache License, version 2.0](https://www.apache.org/licenses/LICENSE-2.0)\n\nMajor changes in 4.1\n--------------------\n\nVersion 4.0 was the last version to support Python 2 and 3.4. Version 4.1 is compatible with Python 3.5+ only.\n\n\nMajor changes in 4.0\n--------------------\n\nVersion 3.4 was the last version in the 3.x range. Version 4.0 drops the following modules,\nas they are insecure:\n\n- `rsa._version133`\n- `rsa._version200`\n- `rsa.bigfile`\n- `rsa.varblock`\n\nThose modules were marked as deprecated in version 3.4.\n\nFurthermore, in 4.0 the I/O functions is streamlined to always work with bytes on all\nsupported versions of Python.\n\nVersion 4.0 drops support for Python 2.6 and 3.3.\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
               "last_day": -1,
               "last_month": -1,
               "last_week": -1
            },
            "home_page": "https://stuvel.eu/rsa",
            "keywords": "",
            "license": "ASL 2",
            "maintainer": "Sybren A. Stuvel",
            "maintainer_email": "sybren@stuvel.eu",
            "name": "rsa",
            "package_url": "https://pypi.org/project/rsa/",
            "platform": "",
            "project_url": "https://pypi.org/project/rsa/",
            "project_urls": {
               "Homepage": "https://stuvel.eu/rsa"
            },
            "release_url": "https://pypi.org/project/rsa/4.6/",
            "requires_dist": [
               "pyasn1 (>=0.1.3)"
            ],
            "requires_python": ">=3.5, <4",
            "summary": "Pure-Python RSA implementation",
            "version": "4.6",
            "yanked": false,
            "yanked_reason": null
         },
         {
            "author": "Shoumik Palkar",
            "author_email": "shoumik@cs.stanford.edu",
            "bugtrack_url": null,
            "classifiers": [
               "License :: OSI Approved :: BSD License",
               "Operating System :: OS Independent",
               "Programming Language :: Python :: 3"
            ],
            "description": "## split annotations\n\nThis package contains the Python implementation of [split annotations](), a system for optimizing applications\nthat combine many data-intensive library functions. See some useful links below.\n\n* [Documentation for this package](https://www.weld.rs/split-annotations/docs/)\n* [GitHub repository](https://www.github.com/weld-project/split-annotations)\n* [SOSP 2019 Paper describing the system](https://shoumik.xyz/static/papers/mozart-sosp19final.pdf)\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
               "last_day": -1,
               "last_month": -1,
               "last_week": -1
            },
            "home_page": "https://www.github.com/weld-project/split-annotations",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "sa",
            "package_url": "https://pypi.org/project/sa/",
            "platform": "",
            "project_url": "https://pypi.org/project/sa/",
            "project_urls": {
               "Homepage": "https://www.github.com/weld-project/split-annotations"
            },
            "release_url": "https://pypi.org/project/sa/0.0.4/",
            "requires_dist": [
               "numpy",
               "pandas",
               "scipy",
               "sharedmem"
            ],
            "requires_python": ">=3.6",
            "summary": "Python split annotations package",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
         }
      ],
      "requests-oauthlib": [
         {
            "author": "The Guardians",
            "author_email": "william.bengtson@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "",
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
               "last_day": -1,
               "last_month": -1,
               "last_week": -1
            },
            "home_page": "",
            "keywords": "testing,logging,example",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "requestsoauthlib",
            "package_url": "https://pypi.org/project/requestsoauthlib/",
            "platform": "",
            "project_url": "https://pypi.org/project/requestsoauthlib/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/requestsoauthlib/0.1.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "A package to prevent exploit",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
         },
         {
            "author": "Kenneth Reitz",
            "author_email": "me@kennethreitz.com",
            "bugtrack_url": null,
            "classifiers": [
               "Development Status :: 5 - Production/Stable",
               "Intended Audience :: Developers",
               "License :: OSI Approved :: BSD License",
               "Natural Language :: English",
               "Programming Language :: Python",
               "Programming Language :: Python :: 2",
               "Programming Language :: Python :: 2.7",
               "Programming Language :: Python :: 3",
               "Programming Language :: Python :: 3.4",
               "Programming Language :: Python :: 3.5",
               "Programming Language :: Python :: 3.6",
               "Programming Language :: Python :: 3.7",
               "Programming Language :: Python :: Implementation :: CPython",
               "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description": "Requests-OAuthlib |build-status| |coverage-status| |docs|\n=========================================================\n\nThis project provides first-class OAuth library support for `Requests <http://python-requests.org>`_.\n\nThe OAuth 1 workflow\n--------------------\n\nOAuth 1 can seem overly complicated and it sure has its quirks. Luckily,\nrequests_oauthlib hides most of these and let you focus at the task at hand.\n\nAccessing protected resources using requests_oauthlib is as simple as:\n\n.. code-block:: pycon\n\n    >>> from requests_oauthlib import OAuth1Session\n    >>> twitter = OAuth1Session('client_key',\n                                client_secret='client_secret',\n                                resource_owner_key='resource_owner_key',\n                                resource_owner_secret='resource_owner_secret')\n    >>> url = 'https://api.twitter.com/1/account/settings.json'\n    >>> r = twitter.get(url)\n\nBefore accessing resources you will need to obtain a few credentials from your\nprovider (e.g. Twitter) and authorization from the user for whom you wish to\nretrieve resources for. You can read all about this in the full\n`OAuth 1 workflow guide on RTD <https://requests-oauthlib.readthedocs.io/en/latest/oauth1_workflow.html>`_.\n\nThe OAuth 2 workflow\n--------------------\n\nOAuth 2 is generally simpler than OAuth 1 but comes in more flavours. The most\ncommon being the Authorization Code Grant, also known as the WebApplication\nflow.\n\nFetching a protected resource after obtaining an access token can be extremely\nsimple. However, before accessing resources you will need to obtain a few\ncredentials from your provider (e.g. Google) and authorization from the user\nfor whom you wish to retrieve resources for. You can read all about this in the\nfull `OAuth 2 workflow guide on RTD <https://requests-oauthlib.readthedocs.io/en/latest/oauth2_workflow.html>`_.\n\nInstallation\n-------------\n\nTo install requests and requests_oauthlib you can use pip:\n\n.. code-block:: bash\n\n    $ pip install requests requests_oauthlib\n\n.. |build-status| image:: https://travis-ci.org/requests/requests-oauthlib.svg?branch=master\n   :target: https://travis-ci.org/requests/requests-oauthlib\n.. |coverage-status| image:: https://img.shields.io/coveralls/requests/requests-oauthlib.svg\n   :target: https://coveralls.io/r/requests/requests-oauthlib\n.. |docs| image:: https://readthedocs.org/projects/requests-oauthlib/badge/\n   :alt: Documentation Status\n   :scale: 100%\n   :target: https://requests-oauthlib.readthedocs.io/\n\n\nHistory\n-------\n\nUNRELEASED\n++++++++++\n\nnothing yet\n\nv1.3.0 (6 November 2019)\n++++++++++++++++++++++++\n\n- Instagram compliance fix\n- Added ``force_querystring`` argument to fetch_token() method on OAuth2Session\n\nv1.2.0 (14 January 2019)\n++++++++++++++++++++++++\n\n- This project now depends on OAuthlib 3.0.0 and above. It does **not** support\n  versions of OAuthlib before 3.0.0.\n- Updated oauth2 tests to use 'sess' for an OAuth2Session instance instead of `auth`\n  because OAuth2Session objects and methods acceept an `auth` paramether which is\n  typically an instance of `requests.auth.HTTPBasicAuth`\n- `OAuth2Session.fetch_token` previously tried to guess how and where to provide\n  \"client\" and \"user\" credentials incorrectly. This was incompatible with some\n  OAuth servers and incompatible with breaking changes in oauthlib that seek to\n  correctly provide the `client_id`. The older implementation also did not raise\n  the correct exceptions when username and password are not present on Legacy\n  clients.\n- Avoid automatic netrc authentication for OAuth2Session.\n\nv1.1.0 (9 January 2019)\n+++++++++++++++++++++++\n\n- Adjusted version specifier for ``oauthlib`` dependency: this project is\n  not yet compatible with ``oauthlib`` 3.0.0.\n- Dropped dependency on ``nose``.\n- Minor changes to clean up the code and make it more readable/maintainable.\n\nv1.0.0 (4 June 2018)\n++++++++++++++++++++\n\n- **Removed support for Python 2.6 and Python 3.3.**\n  This project now supports Python 2.7, and Python 3.4 and above.\n- Added several examples to the documentation.\n- Added plentymarkets compliance fix.\n- Added a ``token`` property to OAuth1Session, to match the corresponding\n  ``token`` property on OAuth2Session.\n\nv0.8.0 (14 February 2017)\n+++++++++++++++++++++++++\n\n- Added Fitbit compliance fix.\n- Fixed an issue where newlines in the response body for the access token\n  request would cause errors when trying to extract the token.\n- Fixed an issue introduced in v0.7.0 where users passing ``auth`` to several\n  methods would encounter conflicts with the ``client_id`` and\n  ``client_secret``-derived auth. The user-supplied ``auth`` argument is now\n  used in preference to those options.\n\nv0.7.0 (22 September 2016)\n++++++++++++++++++++++++++\n\n- Allowed ``OAuth2Session.request`` to take the ``client_id`` and\n  ``client_secret`` parameters for the purposes of automatic token refresh,\n  which may need them.\n\nv0.6.2 (12 July 2016)\n+++++++++++++++++++++\n\n- Use ``client_id`` and ``client_secret`` for the Authorization header if\n  provided.\n- Allow explicit bypass of the Authorization header by setting ``auth=False``.\n- Pass through the ``proxies`` kwarg when refreshing tokens.\n- Miscellaneous cleanups.\n\nv0.6.1 (19 February 2016)\n+++++++++++++++++++++++++\n\n- Fixed a bug when sending authorization in headers with no username and\n  password present.\n- Make sure we clear the session token before obtaining a new one.\n- Some improvements to the Slack compliance fix.\n- Avoid timing problems around token refresh.\n- Allow passing arbitrary arguments to requests when calling\n  ``fetch_request_token`` and ``fetch_access_token``.\n\nv0.6.0 (14 December 2015)\n+++++++++++++++++++++++++\n\n- Add compliance fix for Slack.\n- Add compliance fix for Mailchimp.\n- ``TokenRequestDenied`` exceptions now carry the entire response, not just the\n  status code.\n- Pass through keyword arguments when refreshing tokens automatically.\n- Send authorization in headers, not just body, to maximize compatibility.\n- More getters/setters available for OAuth2 session client values.\n- Allow sending custom headers when refreshing tokens, and set some defaults.\n\n\nv0.5.0 (4 May 2015)\n+++++++++++++++++++\n- Fix ``TypeError`` being raised instead of ``TokenMissing`` error.\n- Raise requests exceptions on 4XX and 5XX responses in the OAuth2 flow.\n- Avoid ``AttributeError`` when initializing the ``OAuth2Session`` class\n  without complete client information.\n\nv0.4.2 (16 October 2014)\n++++++++++++++++++++++++\n- New ``authorized`` property on OAuth1Session and OAuth2Session, which allows\n  you to easily determine if the session is already authorized with OAuth tokens\n  or not.\n- New ``TokenMissing`` and ``VerifierMissing`` exception classes for OAuth1Session:\n  this will make it easier to catch and identify these exceptions.\n\nv0.4.1 (6 June 2014)\n++++++++++++++++++++\n- New install target ``[rsa]`` for people using OAuth1 RSA-SHA1 signature\n  method.\n- Fixed bug in OAuth2 where supplied state param was not used in auth url.\n- OAuth2 HTTPS checking can be disabled by setting environment variable\n  ``OAUTHLIB_INSECURE_TRANSPORT``.\n- OAuth1 now re-authorize upon redirects.\n- OAuth1 token fetching now raise a detailed error message when the\n  response body is incorrectly encoded or the request was denied.\n- Added support for custom OAuth1 clients.\n- OAuth2 compliance fix for Sina Weibo.\n- Multiple fixes to facebook compliance fix.\n- Compliance fixes now re-encode body properly as bytes in Python 3.\n- Logging now properly done under ``requests_oauthlib`` namespace instead\n  of piggybacking on oauthlib namespace.\n- Logging introduced for OAuth1 auth and session.\n\nv0.4.0 (29 September 2013)\n++++++++++++++++++++++++++\n- OAuth1Session methods only return unicode strings. #55.\n- Renamed requests_oauthlib.core to requests_oauthlib.oauth1_auth for consistency. #79.\n- Added Facebook compliance fix and access_token_response hook to OAuth2Session. #63.\n- Added LinkedIn compliance fix.\n- Added refresh_token_response compliance hook, invoked before parsing the refresh token.\n- Correctly limit compliance hooks to running only once!\n- Content type guessing should only be done when no content type is given\n- OAuth1 now updates r.headers instead of replacing it with non case insensitive dict\n- Remove last use of Response.content (in OAuth1Session). #44.\n- State param can now be supplied in OAuth2Session.authorize_url\n",
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
               "last_day": -1,
               "last_month": -1,
               "last_week": -1
            },
            "home_page": "https://github.com/requests/requests-oauthlib",
            "keywords": "",
            "license": "ISC",
            "maintainer": "",
            "maintainer_email": "",
            "name": "requests-oauthlib",
            "package_url": "https://pypi.org/project/requests-oauthlib/",
            "platform": "",
            "project_url": "https://pypi.org/project/requests-oauthlib/",
            "project_urls": {
               "Homepage": "https://github.com/requests/requests-oauthlib"
            },
            "release_url": "https://pypi.org/project/requests-oauthlib/1.3.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "OAuthlib authentication support for Requests.",
            "version": "1.3.0",
            "yanked": false,
            "yanked_reason": null
         },
         {
            "author": "Kenneth Reitz",
            "author_email": "me@kennethreitz.com",
            "bugtrack_url": null,
            "classifiers": [
               "Development Status :: 5 - Production/Stable",
               "Intended Audience :: Developers",
               "License :: OSI Approved :: BSD License",
               "Natural Language :: English",
               "Programming Language :: Python",
               "Programming Language :: Python :: 2",
               "Programming Language :: Python :: 2.7",
               "Programming Language :: Python :: 3",
               "Programming Language :: Python :: 3.4",
               "Programming Language :: Python :: 3.5",
               "Programming Language :: Python :: 3.6",
               "Programming Language :: Python :: 3.7",
               "Programming Language :: Python :: Implementation :: CPython",
               "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description": "Requests-OAuthlib |build-status| |coverage-status| |docs|\n=========================================================\n\nThis project provides first-class OAuth library support for `Requests <http://python-requests.org>`_.\n\nThe OAuth 1 workflow\n--------------------\n\nOAuth 1 can seem overly complicated and it sure has its quirks. Luckily,\nrequests_oauthlib hides most of these and let you focus at the task at hand.\n\nAccessing protected resources using requests_oauthlib is as simple as:\n\n.. code-block:: pycon\n\n    >>> from requests_oauthlib import OAuth1Session\n    >>> twitter = OAuth1Session('client_key',\n                                client_secret='client_secret',\n                                resource_owner_key='resource_owner_key',\n                                resource_owner_secret='resource_owner_secret')\n    >>> url = 'https://api.twitter.com/1/account/settings.json'\n    >>> r = twitter.get(url)\n\nBefore accessing resources you will need to obtain a few credentials from your\nprovider (e.g. Twitter) and authorization from the user for whom you wish to\nretrieve resources for. You can read all about this in the full\n`OAuth 1 workflow guide on RTD <https://requests-oauthlib.readthedocs.io/en/latest/oauth1_workflow.html>`_.\n\nThe OAuth 2 workflow\n--------------------\n\nOAuth 2 is generally simpler than OAuth 1 but comes in more flavours. The most\ncommon being the Authorization Code Grant, also known as the WebApplication\nflow.\n\nFetching a protected resource after obtaining an access token can be extremely\nsimple. However, before accessing resources you will need to obtain a few\ncredentials from your provider (e.g. Google) and authorization from the user\nfor whom you wish to retrieve resources for. You can read all about this in the\nfull `OAuth 2 workflow guide on RTD <https://requests-oauthlib.readthedocs.io/en/latest/oauth2_workflow.html>`_.\n\nInstallation\n-------------\n\nTo install requests and requests_oauthlib you can use pip:\n\n.. code-block:: bash\n\n    $ pip install requests requests_oauthlib\n\n.. |build-status| image:: https://travis-ci.org/requests/requests-oauthlib.svg?branch=master\n   :target: https://travis-ci.org/requests/requests-oauthlib\n.. |coverage-status| image:: https://img.shields.io/coveralls/requests/requests-oauthlib.svg\n   :target: https://coveralls.io/r/requests/requests-oauthlib\n.. |docs| image:: https://readthedocs.org/projects/requests-oauthlib/badge/\n   :alt: Documentation Status\n   :scale: 100%\n   :target: https://requests-oauthlib.readthedocs.io/\n\n\nHistory\n-------\n\nUNRELEASED\n++++++++++\n\nnothing yet\n\nv1.3.0 (6 November 2019)\n++++++++++++++++++++++++\n\n- Instagram compliance fix\n- Added ``force_querystring`` argument to fetch_token() method on OAuth2Session\n\nv1.2.0 (14 January 2019)\n++++++++++++++++++++++++\n\n- This project now depends on OAuthlib 3.0.0 and above. It does **not** support\n  versions of OAuthlib before 3.0.0.\n- Updated oauth2 tests to use 'sess' for an OAuth2Session instance instead of `auth`\n  because OAuth2Session objects and methods acceept an `auth` paramether which is\n  typically an instance of `requests.auth.HTTPBasicAuth`\n- `OAuth2Session.fetch_token` previously tried to guess how and where to provide\n  \"client\" and \"user\" credentials incorrectly. This was incompatible with some\n  OAuth servers and incompatible with breaking changes in oauthlib that seek to\n  correctly provide the `client_id`. The older implementation also did not raise\n  the correct exceptions when username and password are not present on Legacy\n  clients.\n- Avoid automatic netrc authentication for OAuth2Session.\n\nv1.1.0 (9 January 2019)\n+++++++++++++++++++++++\n\n- Adjusted version specifier for ``oauthlib`` dependency: this project is\n  not yet compatible with ``oauthlib`` 3.0.0.\n- Dropped dependency on ``nose``.\n- Minor changes to clean up the code and make it more readable/maintainable.\n\nv1.0.0 (4 June 2018)\n++++++++++++++++++++\n\n- **Removed support for Python 2.6 and Python 3.3.**\n  This project now supports Python 2.7, and Python 3.4 and above.\n- Added several examples to the documentation.\n- Added plentymarkets compliance fix.\n- Added a ``token`` property to OAuth1Session, to match the corresponding\n  ``token`` property on OAuth2Session.\n\nv0.8.0 (14 February 2017)\n+++++++++++++++++++++++++\n\n- Added Fitbit compliance fix.\n- Fixed an issue where newlines in the response body for the access token\n  request would cause errors when trying to extract the token.\n- Fixed an issue introduced in v0.7.0 where users passing ``auth`` to several\n  methods would encounter conflicts with the ``client_id`` and\n  ``client_secret``-derived auth. The user-supplied ``auth`` argument is now\n  used in preference to those options.\n\nv0.7.0 (22 September 2016)\n++++++++++++++++++++++++++\n\n- Allowed ``OAuth2Session.request`` to take the ``client_id`` and\n  ``client_secret`` parameters for the purposes of automatic token refresh,\n  which may need them.\n\nv0.6.2 (12 July 2016)\n+++++++++++++++++++++\n\n- Use ``client_id`` and ``client_secret`` for the Authorization header if\n  provided.\n- Allow explicit bypass of the Authorization header by setting ``auth=False``.\n- Pass through the ``proxies`` kwarg when refreshing tokens.\n- Miscellaneous cleanups.\n\nv0.6.1 (19 February 2016)\n+++++++++++++++++++++++++\n\n- Fixed a bug when sending authorization in headers with no username and\n  password present.\n- Make sure we clear the session token before obtaining a new one.\n- Some improvements to the Slack compliance fix.\n- Avoid timing problems around token refresh.\n- Allow passing arbitrary arguments to requests when calling\n  ``fetch_request_token`` and ``fetch_access_token``.\n\nv0.6.0 (14 December 2015)\n+++++++++++++++++++++++++\n\n- Add compliance fix for Slack.\n- Add compliance fix for Mailchimp.\n- ``TokenRequestDenied`` exceptions now carry the entire response, not just the\n  status code.\n- Pass through keyword arguments when refreshing tokens automatically.\n- Send authorization in headers, not just body, to maximize compatibility.\n- More getters/setters available for OAuth2 session client values.\n- Allow sending custom headers when refreshing tokens, and set some defaults.\n\n\nv0.5.0 (4 May 2015)\n+++++++++++++++++++\n- Fix ``TypeError`` being raised instead of ``TokenMissing`` error.\n- Raise requests exceptions on 4XX and 5XX responses in the OAuth2 flow.\n- Avoid ``AttributeError`` when initializing the ``OAuth2Session`` class\n  without complete client information.\n\nv0.4.2 (16 October 2014)\n++++++++++++++++++++++++\n- New ``authorized`` property on OAuth1Session and OAuth2Session, which allows\n  you to easily determine if the session is already authorized with OAuth tokens\n  or not.\n- New ``TokenMissing`` and ``VerifierMissing`` exception classes for OAuth1Session:\n  this will make it easier to catch and identify these exceptions.\n\nv0.4.1 (6 June 2014)\n++++++++++++++++++++\n- New install target ``[rsa]`` for people using OAuth1 RSA-SHA1 signature\n  method.\n- Fixed bug in OAuth2 where supplied state param was not used in auth url.\n- OAuth2 HTTPS checking can be disabled by setting environment variable\n  ``OAUTHLIB_INSECURE_TRANSPORT``.\n- OAuth1 now re-authorize upon redirects.\n- OAuth1 token fetching now raise a detailed error message when the\n  response body is incorrectly encoded or the request was denied.\n- Added support for custom OAuth1 clients.\n- OAuth2 compliance fix for Sina Weibo.\n- Multiple fixes to facebook compliance fix.\n- Compliance fixes now re-encode body properly as bytes in Python 3.\n- Logging now properly done under ``requests_oauthlib`` namespace instead\n  of piggybacking on oauthlib namespace.\n- Logging introduced for OAuth1 auth and session.\n\nv0.4.0 (29 September 2013)\n++++++++++++++++++++++++++\n- OAuth1Session methods only return unicode strings. #55.\n- Renamed requests_oauthlib.core to requests_oauthlib.oauth1_auth for consistency. #79.\n- Added Facebook compliance fix and access_token_response hook to OAuth2Session. #63.\n- Added LinkedIn compliance fix.\n- Added refresh_token_response compliance hook, invoked before parsing the refresh token.\n- Correctly limit compliance hooks to running only once!\n- Content type guessing should only be done when no content type is given\n- OAuth1 now updates r.headers instead of replacing it with non case insensitive dict\n- Remove last use of Response.content (in OAuth1Session). #44.\n- State param can now be supplied in OAuth2Session.authorize_url\n",
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
               "last_day": -1,
               "last_month": -1,
               "last_week": -1
            },
            "home_page": "https://github.com/requests/requests-oauthlib",
            "keywords": "",
            "license": "ISC",
            "maintainer": "",
            "maintainer_email": "",
            "name": "requests-oauthlib",
            "package_url": "https://pypi.org/project/requests-oauthlib/",
            "platform": "",
            "project_url": "https://pypi.org/project/requests-oauthlib/",
            "project_urls": {
               "Homepage": "https://github.com/requests/requests-oauthlib"
            },
            "release_url": "https://pypi.org/project/requests-oauthlib/1.3.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "OAuthlib authentication support for Requests.",
            "version": "1.3.0",
            "yanked": false,
            "yanked_reason": null
         }
      ]
   }
}